generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int       @id @default(autoincrement())
  password       String
  email          String   @unique
  isConfirmed    Boolean   @default(false)
  name           String?   // Nullable
  phoneNumber    String    @unique // Phone number is unique and used for login
  position       Position? @relation("UserPosition", fields: [positionId], references: [id])
  positionId     Int?      @unique // Foreign key to Position model
  role           String    @default("user")

  @@map("Users") // Use uppercase Users in the database
}

model Position {
  id         Int      @id @default(autoincrement())
  latitude   Float
  longitude  Float
  user       Users?   @relation("UserPosition")
  police     Police?  @relation("PolicePosition")
  hospital   Hosbital? @relation("HosbitalPosition")

  @@map("Position") // Use uppercase Position in the database
}

model SOS {
  id            Int     @id @default(autoincrement())
  lat           Float
  lng           Float
  nearestUser   Int?
  contacts      String?
  email         String @unique
  isConfirmed   Boolean @default(false)

  @@map("SOS") // Use uppercase SOS in the database
}

model Police {
  id           Int       @id @default(autoincrement())
  name         String
  isOnline     Boolean   @default(false)
  position     Position  @relation("PolicePosition", fields: [positionId], references: [id])
  positionId   Int       @unique // Foreign key to Position model

  @@map("Police") // Use uppercase Police in the database
}

model Hosbital {
  id           Int       @id @default(autoincrement())
  name         String
  isOnline     Boolean   @default(false)
  position     Position  @relation("HosbitalPosition", fields: [positionId], references: [id])
  positionId   Int       @unique // Foreign key to Position model

  @@map("Hosbital") // Use uppercase Hosbital in the database
}
